def branch = env.BRANCH_NAME
def build = env.BUILD_NUMBER
def DEBUG = true
def appname ="helloworld"
def DEPLOY = false
def artifactory = "docker.io" 
def repo = "elevy99927jbdemo" //https://github.com/vaismanius/Jenkins-k8s.git
def appimage = "${artifactory}/${repo}/${appname}"
def apptag = "eyal-${build}"

def kubernetesurl = "https://kubernetes.default.svc"

if (branch == "dev"){
echo "----------  dev   -------"
kubernetesurl = "https://kubernetes.default.svc"
} else if  (branch == "qa"){
echo "----------  qa   -------"
} else if  (branch == "main"){
echo "----------  master   -------"
} else {

}


podTemplate(containers: [
      containerTemplate(name: 'jnlp', image: 'jenkins/inbound-agent', ttyEnabled: true),
      containerTemplate(name: 'docker', image: 'docker:latest', ttyEnabled: true)
  ],
  volumes: [
     
  ]) {
    node(POD_LABEL) {
        stage('chackout') {
            container('jnlp') {
            sh '/usr/bin/git config --global http.sslVerify false'
	    checkout scm
          }
        } // end chackout

        stage('build') {
            container('docker') {
              echo "Building docker image..."
	      echo "Original step was using docker for build."
	      echo "You will need to use kaniko instead"
              sh "echo docker build -t $appimage --no-cache ."
              sh "echo docker login $artifactory -u admin -p password"
              sh "echo docker push $appimage"
            }
        } //end build

        stage('deploy') {
            container('docker') {
	      if (DEPLOY) {
                echo "***** Doing some deployment stuff *********"
             }  else {
                echo "***** NO DEPLOY - Doing somthing else. Testing? *********"
             }
           }
        } //end deploy
    }
}

